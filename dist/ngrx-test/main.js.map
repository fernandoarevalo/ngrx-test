{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/counter.actions.ts","webpack:///./src/app/counter.reducer.ts","webpack:///./src/app/my-counter/my-counter.component.css","webpack:///./src/app/my-counter/my-counter.component.html","webpack:///./src/app/my-counter/my-counter.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-my-counter></app-my-counter>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngrx-test';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { AppComponent } from './app.component';\nimport { counterReducer } from \"./counter.reducer\";\nimport { MyCounterComponent } from './my-counter/my-counter.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyCounterComponent\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot({ count: counterReducer })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action } from \"@ngrx/store\";\r\n\r\nexport enum ActionTypes {\r\n    Increment = '[Counter Component] Increment',\r\n    Decrement = '[Counter Component] Decrement',\r\n    Reset = '[counter Component] Reset',\r\n}\r\n\r\nexport class Increment implements Action {\r\n    readonly type = ActionTypes.Increment;\r\n}\r\n\r\nexport class Decrement implements Action {\r\n    readonly type = ActionTypes.Decrement;\r\n}\r\n\r\nexport class Reset implements Action {\r\n    readonly type = ActionTypes.Reset;\r\n}","import { Action } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"./counter.actions\";\r\n\r\nexport const initialState = 0;\r\n\r\nexport function counterReducer(state = initialState, action: Action) {\r\n    switch (action.type) {\r\n        case ActionTypes.Increment:\r\n            return state + 1;\r\n\r\n        case ActionTypes.Decrement:\r\n            return state - 1;\r\n\r\n        case ActionTypes.Reset:\r\n            return 0;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LWNvdW50ZXIvbXktY291bnRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<button (click)=\\\"increment()\\\">Increment</button>\\n\\n<div>Current Count: {{ count$ | async }}</div>\\n\\n<button (click)=\\\"decrement()\\\">Decrement</button>\\n\\n<button (click)=\\\"reset()\\\">Reset</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { Increment, Decrement, Reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-my-counter',\n  templateUrl: './my-counter.component.html',\n  styleUrls: ['./my-counter.component.css']\n})\nexport class MyCounterComponent implements OnInit {\n\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n    this.count$ = store.pipe(select('count'));\n  }\n\n  ngOnInit() {\n  }\n\n  increment() {\n    this.store.dispatch(new Increment);\n  }\n\n  decrement() {\n    this.store.dispatch(new Decrement);\n  }\n\n  reset() {\n    this.store.dispatch(new Reset);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}